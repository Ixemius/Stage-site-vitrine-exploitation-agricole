import pool from '../config/database.js';
import bcrypt from 'bcrypt';
import { v4 as uuidV4 } from 'uuid';
import xss from 'xss';

export const loginController = (req, res) => {
    res.render('layout', {template: 'login' , error: null});
}

export const loginPostController = (req, res) => {
    const {email, password} = req.body;

    const emailXss = xss(email);
    const passwordXss = xss(password);

    if(!emailXss || !passwordXss){
        return res.status(400).render('layout', {template: 'login', error: "Veuillez remplir tous les champs avant de valider"});
    }

    let sql = "SELECT * FROM Users WHERE email = ?";

    pool.query(sql, emailXss, (err, result) => {
        if(err){
            return res.status(400).render('layout', {template: 'login', error: "Une erreur est survenue lors de la connexion"});
        }else{
            if(result.length){
                const user = result[0];

                if(bcrypt.compareSync(passwordXss, user.password)){
                    if(user.roles === "Admin"){
                        req.session.isAdmin = true;
                    }
                    req.session.isLogged = true;
                    req.session.userId = user.user_id;

                    return res.redirect('/');
                }else{
                    return res.status(400).render('layout', {template: 'login', error: "Le mot de passe ou l'email est incorrect"});
                }
            }else{
                return res.status(400).render('layout', {template: 'login', error: "Le mot de passe ou l'email est incorrect"});
            }
        }
    });

}

export const registerController = (req, res) => {
    res.render('layout', {template: 'register', error: null});
}

export const registerPostController = (req, res) => {
    const {firstname, lastname, email, phone, address, password, passwordConfirm} = req.body;
    console.log(req.body)

    const firstnameXss = xss(firstname);
    const lastnameXss = xss(lastname);
    const emailXss = xss(email);
    const phoneXss = xss(phone);
    const addressXss = xss(address);
    const passwordXss = xss(password);
    const passwordConfirmXss = xss(passwordConfirm);

    console.log(firstnameXss, lastnameXss, emailXss, phoneXss, addressXss, passwordXss, passwordConfirmXss)

    const inputRegex = /^[\p{L}a-zA-Z0-9_\-\s.,;:!?()]*$/u;
    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9._-]{2,}\.[a-z]{2,4}$/;

    if(!inputRegex.test(firstnameXss)){
        return res.status(400).render('layout', {template: 'register', error: "Les caractères spéciaux ne sont pas autorisés nom"});
    }

    if(!inputRegex.test(lastnameXss)){
        return res.status(400).render('layout', {template: 'register', error: "Les caractères spéciaux ne sont pas autorisés prenom"});
    }

    if(!inputRegex.test(addressXss)){
        return res.status(400).render('layout', {template: 'register', error: "Les caractères spéciaux ne sont pas autorisés address"});
    }

    if(!emailRegex.test(emailXss)){
        return res.status(400).render('layout', {template: 'register', error: "L'email n'est pas valide"});
    }

    if(!emailXss || !phoneXss || !passwordXss || !passwordConfirmXss || !addressXss || !firstnameXss || !lastnameXss){
        return res.status(400).render('layout', {template: 'register', error: "Veuillez remplir tous les champs avant de valider"});
    }

    if(passwordXss !== passwordConfirmXss){
        return res.status(400).render('layout', {template: 'register', error: "Les mots de passe ne correspondent pas"});
    }

    const newUser = {
        user_id: uuidV4(),
        firstname: firstnameXss,
        lastname: lastnameXss,
        email: emailXss,
        phone: phoneXss,
        address: addressXss,
        password: bcrypt.hashSync(passwordXss, 10)
    };
    console.log(newUser)

    let sql = "INSERT INTO Users  SET ? ";

    pool.query(sql, newUser, (err) => {
        if(err){
            console.error(err)
            return res.status(400).render('layout', {template: 'register', error: "Une erreur est survenue lors de l'inscription"});

        }else{
            return res.redirect('/login');
        }
    });
}